// Домашнее задание массивы.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std;
int main()
{
    setlocale(LC_ALL, "Russian");

                                        /*Задания на массивы часть 1 */

                           /* Ввести массив из 5 чисел, а затем вывести его в обратном порядке. */

    int ar[5];

    cout << "Вводим массив из 5 чисел" << endl;



    for (int i = 0; i < 5; i++)
    {
        cin >> ar[i];
    }
    cout << "Выводим массив из 5 чисел в обратном порядке" << endl;

    for (int i = 4; i >= 0; i--)
    {
        cout << ar[i] << endl;
    }


    /* Создать массив из 20 случайных чисел. Вывести все элементы массива с чётными индексами.*/

        // создать массив из 20 случайных чисел вывести все элементы с четными индексами


    int loans[20] = { 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39 }; //Объявляем и инициализируем массив из 20 элементов

    for (int i = 0; i < 20; i++)
    {
        //cout << i << endl;         // технологическое значение i нужно для того чтобы убедиться в том, что цикл выводит номер ячейки и элемент массива находящийся в ней. 
       // cout << loans[i] << endl; //  технологический cout который выводит все ячейки массива 
        if (loans[i] % 2 == 0)       //   формула выводящая четные элементы массива
        {
            cout << loans[i] << endl;
        }
    }

    /*Задача 3

Создать массив из 10 случайных чисел в диапазоне от -20 до 20. Определить количество, сумму  и среднее арифметическое положительных элементов массива.
    */
    
    cout << "Создаём массив из 10 случайных чисел в заданном диапазоне" << endl;
    cout << "\n";

    cout << "\n";

    int arr[10]{ -19, 7, 9, 11, -13, 15, 16, -17, 18, 19 };      // Массив создан
    int n = 0; // Счетчик  положительных элементов массива
    int summ = 0;  // сумма всех положительных элементов массива
    int r = 0;    //  Определяем средне арифметическое положительных элементов массива
    cout << "1. Вычисляем количество положительных элементов массива : ";
    for (int i = 0; i <= 9; i++)
    {
        if (arr[i] >= 0)
        {
            n++;

            summ = summ + arr[i];

            r = summ / n;
        }

    }
    cout << n;
    cout << "\n";

    cout << "\n";

    cout << "2. Вычисляем сумму положительных элементов массива : ";
    cout << summ;
    cout << "\n";

    cout << "\n";


    cout << "3. Вычисляем среднеарифметическое положительных элементов массива  ";
    cout << r;
    cout << "\n";

    cout << "\n";

                                               /*Знаки пунктуации цифры и буквы*/

        // создать символьный массив из 100 случайных элементов определить количество цифр букв и знаков пунктуации


    srand(time(NULL));                                              // Генератор случайных чисел

    const char size = 100;

    char arr[size];

    int count_number = 0;
    int count_letter = 0;
    int count_znak = 0;

    for (int i = 0; i < size; i++)
    {
        arr[i] = i;
    }

    for (int i = 0; i < size; i++)
    {
        cout << arr[i] << " ";


    }
    for (int i = 0; i < size; i++)
    {
        if (isalpha(arr[i]))
        {
            count_letter++;
        }
        else
        {
            if (isdigit(arr[i]))
            {
                count_number++;
            }
            else
                if (ispunct(arr[i]))
                {
                    count_znak++;
                }
        }
    }

    cout << "\n" << "Kolichestvo bukv = " << count_letter;
    cout << "\n" << "Kolichestvo chisel = " << count_number;
    cout << "\n" << "Kolichestvo znakov punktuacii = " << count_znak;
    cout << "\n";
    cout << "Всего на моей клавиатуре 67 символов, до сотни не дошли простите";

    return 0;
   



    /* Написать программу, которая предлагает пользователю ввести число, и затем подсчитывает, сколько раз это число встречается в массиве на 100 случайных элементов.   */
      
    srand(time(NULL));
    int b;
    int const Size = 100;
    int arr[Size];
    for (int i = 0; i < Size; i++)
    {
        arr[i] = rand() % 100;
    }
    cout << "Введите число в диапазоне 0 - 100" << endl;
    cin >> b;                                               // Число в заданном диапазоне вводимое пользователем
    cout << "Число обнаружено";
    for (int i = 0; i < 100; i++)
    {
        cout << arr[i] << endl;
    }

         

       /*Создать массив из 20 случайных чисел в диапазоне от -10 до 30. Написать программу, определяющую сумму элементов массива, находящихся в массиве после первого отрицательного элемента.*/

    srand(time(NULL));
    int m = 0; /* метка первого отрицательного числа*/
    int summ = 0; /* сумма значений элементов массива посчитанных после первого отрицательного числа   */
    int loans[20]; /*Массив из 20 случайных чисел*/

    for (int i = 0; i < 20; i++)
    {
        loans[i] = rand() % 40 - 10;

        cout << loans[i] << endl;

        if (m == 1)
        {
            summ = summ + loans[i];
        }
        else
        {
            if (loans[i] < 0)
            {
                m = 1;

                cout << "  отрицательное число" << endl;
            }


        }


    }
    cout << "сумма равна = " << summ << endl;



    /* Создать массив из 20 случайных чисел в диапазоне от -30 до 10. Написать программу, определяющую сумму элементов массива, находящихся в массиве до первого положительного элемента. */
    {
        /* Анализ массива и сумммирование чисел вариант 2*/
        setlocale(LC_ALL, "Russian");

        srand(time(NULL));   /* Генератор случайных чисел */

        int m = 0; /*метка первого gложительного числа */
        int summ = 0; /* сумма значений элементов массива посчитанных после первого положительного элемента*/
        int kings[20]; /*Массив из 20 случайных чисел*/

        for (int i = 0; i < 20; i++)
        {
            kings[i] = rand() % 40 - 30;

            cout << kings[i] << endl;

            if (m == 0)
            {

                if (kings[i] > 0)
                {
                    m = 1;
                    cout << " положительное число" << endl;

                }
                else
                {
                    summ = summ + kings[i];
                }

            }
        }
        cout << "сумма равна = " << summ << endl;


        /* Специальное задание можно было сделать только одно сложное задание */

        /* 1.	Осуществить циклический сдвиг массива на N элементов. Направление сдвига указывает пользователь (например, массив 0,1,2,3,4,5,6,7,8,9 при циклическом сдвиге вправо на 3 элемента примет вид 7,8,9,0,1,2,3,4,5,6).      */
              

        int tmp[10] = { 1,2,3,4,5,6,7,8,9,0 };
        int w = 8;   // насколько сдвигать 
        cout << "Насколько элементов сдвинуть массив?" << endl;
        cin >> w;
        for (int i = 8; i >= 0; i--)
        {
            //  swap(tmp[i], tmp[i + w]);
        }
        cout << tmp;

         
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
